---
# configure task for pgpool
- name: Create folders
  ansible.builtin.file:
    path: "{{ item }}"
    owner: postgres
    group: postgres
    mode: 0744
    state: directory
  with_items:
    - "{{ pgpool.log_dir }}"
    - "{{ pgpool.run_dir }}"

- name: Configure PgPool II
  ansible.builtin.template:
    src: templates/pgpool.conf.j2
    dest: "{{ pgpool.conf_dir }}/pgpool.conf"
    owner: root
    group: postgres
    mode: 0640

- name: Configure failover.sh
  ansible.builtin.template:
    src: templates/failover.sh.j2
    dest: "{{ pgpool.conf_dir }}/failover.sh"
    owner: postgres
    group: postgres
    mode: 0750

- name: Configure follow_primary.sh
  ansible.builtin.template:
    src: templates/failover.sh.j2
    dest: "{{ pgpool.conf_dir }}/follow_primary.sh"
    owner: postgres
    group: postgres
    mode: 0750

- name: Configure access
  community.postgresql.postgresql_pg_hba:
    dest: "{{ pgpool.conf_dir }}/pool_hba.conf"
    contype: host
    method: scram-sha-256
    databases: "{{ item.database }}"
    users: "{{ item.name }}"
    source: 0.0.0.0/0
  with_items:
    - "{{ users }}"
    - "{{ replication_user }}"
    - "{{ pgpool_user }}"

- name: Configure AES key
  ansible.builtin.copy:
    dest: "{{ postgres.home_dir }}/.pgpoolkey"
    content: test
    owner: postgres
    group: postgres
    mode: 0600
  become_user: postgres
  become: true

- name: Configure user passwords
  ansible.builtin.shell: pg_enc -m -k {{ postgres.home_dir }}/.pgpoolkey -u {{ item.name }} {{ item.password }}
  with_items:
    - "{{ replication_user }}"
    - "{{ pgpool_user }}"
    - "{{ users }}"

- name: Configure PCP password
  block:
    - name: Calculate pgpool user password
      ansible.builtin.shell: "pg_md5 {{ vault_pgpool_passwd }}"
      register: pgpool_md5_password

    - name: Copy password to pcp.conf
      ansible.builtin.copy:
        content: "pgpool:{{ pgpool_md5_password.stdout }}"
        dest: "{{ pgpool.conf_dir }}/pcp.conf"
        owner: root
        group: root
        mode: 0644

- name: Configure passwordless ssh access to Postrges
  ansible.builtin.include_tasks:
    file: ssh.yml
    apply:
      tags: [ all, pgpool, configure ]
  with_items:
    - postgres
    - root
  when: vault_pgpool_private_key is defined

- name: Restart PgPool II
  ansible.builtin.service:
    name: pgpool2
    state: restarted