---
# slave task for postgres
- name: Wait for Master node
  ansible.builtin.wait_for:
    host: "{{ master_ip_address }}"
    port: 5432
    delay: 10

- name: Check required syncronization
  ansible.builtin.stat:
    path: "{{ postgres.conf_dir }}/replication.done"
  register: replication_required_file

- name: Stop Postgres
  ansible.builtin.service:
    name: postgresql
    state: stopped

- name: Sync database
  become_user: postgres
  become: true
  when: not replication_required_file.stat.exists
  block:
    - name: Remove database folder
      ansible.builtin.file:
        path: "{{ postgres.data_dir }}"
        state: absent

    - name: Fetch data from master
      ansible.builtin.shell: |
        PGPASSWORD="{{ replication_user.password }}" \
        pg_basebackup \
          --write-recovery-conf \
          --format=plain \
          --wal-method=stream \
          --verbose \
          -h "{{ master_ip_address }}" \
          -p "{{ postgres.listen_port }}" \
          -U "{{ replication_user.name }}" \
          -D "{{ postgres.data_dir }}" > "{{ postgres.conf_dir }}/replication.done"
      args:
        chdir: "{{ postgres.conf_dir }}"
        creates: replication.done

- name: Restart Postgres
  ansible.builtin.service:
    name: postgresql
    state: restarted
