---
# master task for postgres
- name: Create databases
  community.postgresql.postgresql_db:
    name: "{{ item.name }}"
  with_items: "{{ databases }}"
  become_user: postgres
  become: true

- name: Create users
  community.postgresql.postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    role_attr_flags: "{{ item.attributes | join(',') }}"
  environment:
    PGOPTIONS: -c password_encryption=scram-sha-256
  with_items: "{{ users }}"
  become_user: postgres
  become: true

- name: Configure user access
  community.postgresql.postgresql_pg_hba:
    dest: "{{ postgres.conf_dir }}/pg_hba.conf"
    contype: host
    method: scram-sha-256
    databases: "{{ item.database }}"
    users: "{{ item.name }}"
    source: 0.0.0.0/0
  with_items: "{{ users }}"

- name: Grant privileges to users
  community.postgresql.postgresql_privs:
    role: "{{ item.name }}"
    database: "{{ item.database }}"
    privs: "{{ item.privilege }}"
    type: schema
    objs: public
  with_items: "{{ users }}"
  become_user: postgres
  become: true

- name: Create replication user
  community.postgresql.postgresql_user:
    name: "{{ replication_user.name }}"
    password: "{{ replication_user.password }}"
    role_attr_flags: REPLICATION,LOGIN
  environment:
    PGOPTIONS: -c password_encryption=scram-sha-256
  become_user: postgres
  become: true

- name: Configure replication access
  community.postgresql.postgresql_pg_hba:
    dest: "{{ postgres.conf_dir }}/pg_hba.conf"
    contype: host
    method: scram-sha-256
    databases: "{{ replication_user.database }}"
    users: "{{ replication_user.name }}"
    source: "{{ database_subnet }}"

- name: Create PgPool user
  community.postgresql.postgresql_user:
    name: "{{ pgpool_user.name }}"
    password: "{{ pgpool_user.password }}"
    role_attr_flags: SUPERUSER
  environment:
    PGOPTIONS: -c password_encryption=scram-sha-256
  become_user: postgres
  become: true

- name: Configure PgPool access
  community.postgresql.postgresql_pg_hba:
    dest: "{{ postgres.conf_dir }}/pg_hba.conf"
    contype: host
    method: scram-sha-256
    databases: "{{ pgpool_user.database }}"
    users: "{{ pgpool_user.name }}"
    source: "{{ database_subnet }}"
  when: pgpool_user is defined

- name: Restart Postgres
  ansible.builtin.service:
    name: postgresql
    state: restarted